// Code generated by hertz generator.

package main

import (
	"time"

	middleware "github.com/cloudwego/api_gateway/hertz_gateway/biz/middleware"
	"github.com/cloudwego/hertz/pkg/app/middlewares/server/basic_auth"
	"github.com/cloudwego/hertz/pkg/app/server"

	"github.com/hertz-contrib/cache"
	"github.com/hertz-contrib/cache/persist"
)

func main() {
	h := server.Default(
		server.WithHostPorts("127.0.0.1:8080"),
	)

	// BasicAuth middleware
	h.Use(basic_auth.BasicAuth(map[string]string{
		"monday":     "mahjong",
		"bytedance":  "internship",
		"china":      "number1",
		"instagram?": "weibo!",
		"whatsapp?":  "wechat!",
	}))

	h.Use(middleware.RateLimiter(100, time.Second*5))

	// Cache middleware
	memoryStore := persist.NewMemoryStore(1 * time.Minute)
	// sets the TTL value for URI-based items in the cache
	h.Use(cache.NewCacheByRequestURI(memoryStore, 2*time.Second))

	register(h)
	h.Spin()
}
